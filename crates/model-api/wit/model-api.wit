package example:host;

world model-world {
  import print: func(msg: string);

  record point3 {
    x: f64,
    y: f64,
    z: f64,
  }

  resource wire-builder {
    constructor();
    add-edge: func(edge: borrow<edge>);
    build: func() -> wire;
  }

  resource wire {

  }

  resource face {
    from-wire: static func(w: borrow<wire>) -> face;
    fillet: func(radius: f64) -> face;
    outer-wire: func() -> wire;
  }

  resource shell {

  }

  resource solid {

  }

  resource compound {

  }

  resource edge {
    segment: static func(p1: point3, p2: point3) -> edge;
  }

  resource shape {
    from-wire: static func(w: borrow<wire>) -> shape;
  }

  export init-model: func();
  export run: func() -> shape;
}
