package example:host;

world model-world {
  import print: func(msg: string);

  record point3 {
    x: f64,
    y: f64,
    z: f64,
  }

  resource wasm-wire-builder {
    constructor();
    add-edge: func(edge: borrow<wasm-edge>);
    build: func() -> wasm-wire;
  }

  resource wasm-wire {

  }

  resource wasm-face {

  }

  resource wasm-shell {

  }

  resource wasm-solid {

  }

  resource wasm-compound {

  }

  resource wasm-edge {
    segment: static func(p1: point3, p2: point3) -> wasm-edge;
  }

  resource wasm-shape {
    from-wire: static func(w: borrow<wasm-wire>) -> wasm-shape;
  }

  export init-model: func();
  export run: func() -> wasm-shape;
}
